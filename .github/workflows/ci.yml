name: CI
on:
  pull_request:
  push:
    branches:
      - main
jobs:
  quality:
    name: Quality Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Yarn Install
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: CodeQuality
        run: yarn lint

  unittest:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Yarn Install
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Test
        run: yarn test

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Yarn Install
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Build
        run: yarn build

  deployment:
    name: Netlify Deploy
    runs-on: ubuntu-latest
    needs: ['unittest', 'quality', 'build']
    steps:
      - uses: jsmrcaga/action-netlify-deploy@v1.6.0
        with:
          NETLIFY_AUTH_TOKEN: ${{secrets.HEROKU_API_KEY}}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_DEPLOY_TO_PROD: 'dimc-react-quiz'
